<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="LxTools" #>
<# switch (this.HeaderType) { #>
<# case "all": #>{| class="sortable wikitable" style="text-align:center; width:<# if (IncludeAllKills) { #>1050px<# } else { #>1000px<# } #>"
<# break; #>
<# case "top10": #>{| class="sortable wikitable" style="text-align:center; width:<# if (IncludeAllKills) { #>1050px<# } else { #>1000px<# } #>"
! colspan=<#= 12 + (IncludeAllKills ? 1 : 0) + (IncludeTeamColumn ? 1 : 0) #> | Top 10
|-
<# break; #>
<# case "top10-complete": #>{| class="sortable wikitable collapsible collapsed" style="margin-top:-14px; text-align:center; width:<# if (IncludeAllKills) { #>1050px<# } else { #>1000px<# } #>"
! colspan=<#= 12 + (IncludeAllKills ? 1 : 0) + (IncludeTeamColumn ? 1 : 0) #> | Complete Table
|-
<# break; #>
<# } #>
! colspan=<#= 4 + (IncludeAllKills ? 1 : 0) + (IncludeTeamColumn ? 1 : 0) #> | Player
! colspan=2 width=100px | Games
! colspan=2 width=100px | vs. {{T}}
! colspan=2 width=100px | vs. {{Z}}
! colspan=2 width=100px | vs. {{P}}
|-
! width=2px |
! width=2px |
! width=2px |
! width=125px |ID
<# if (IncludeTeamColumn) { #>! width=175px |Team
<# } #>
<# if (IncludeAllKills) { #>! width=60px |All-Kills
<# } #>
! Record
! Win%
! Record
! Win%
! Record
! Win%
! Record
! Win%
|-
<# foreach (Indexing<Bag> idxobj in this.Rows) {
	   int index = idxobj.Index;
	   Bag obj = idxobj.Object; #>
| <#= index #>
| {{FlagRace|<#= obj["flag"] #>|<#= obj["race"] #>}}
|align=left | [[<#= obj["player"] #>]]
<# if (IncludeTeamColumn) { #>|align=left | {{team/<#= obj["team"] #>}}
<# } #>
<# if (IncludeAllKills) { #>| <#= obj["allkills"] #>
<# } #>
| <#= obj["wl"] #>
| <#= obj["vT"] #>
| <#= obj["vZ"] #>
| <#= obj["vP"] #>
|-
<# } #>
|}
<#+
public bool IncludeAllKills { get; set; }
public bool IncludeTeamColumn { get; set; }
public string HeaderType { get; set; }
public IEnumerable<Indexing<Bag>> Rows { get; set; }
#>