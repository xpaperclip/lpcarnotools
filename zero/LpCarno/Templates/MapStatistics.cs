// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace LpCarno.Templates
{
    using System.Collections.Generic;
    using LxTools;
    using System;
    
    
    #line 1 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class MapStatistics : MapStatisticsBase
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public virtual string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write("{|class=\"sortable wikitable\" style=\"text-align:center;\"\r\n\r\n!colspan=2 style=\"bord" +
                    "er-left:  1px solid #777; border-top: 1px solid #777; border-right: 1px solid #7" +
                    "77;\" |\r\n!colspan=4 style=\"border-right: 1px solid #777; border-top: 1px solid #7" +
                    "77;\"                               |{{SC2-T}} vs. {{SC2-Z}}\r\n!colspan=4 style=\"b" +
                    "order-right: 1px solid #777; border-top: 1px solid #777;\"                       " +
                    "        |{{SC2-Z}} vs. {{SC2-P}}\r\n!colspan=4 style=\"border-right: 1px solid #777" +
                    "; border-top: 1px solid #777;\"                               |{{SC2-P}} vs. {{SC" +
                    "2-T}}\r\n!colspan=3 style=\"border-right: 1px solid #777; border-top: 1px solid #77" +
                    "7;\"                               |Mirrors\r\n\r\n|-\r\n!style=\"border-left: 1px solid" +
                    " #777;\" width=120px |Map\r\n!style=\"border-right: 1px solid #777;\" width=30px |\r\n!" +
                    "style=\"\" width=20px                              |Σ\r\n!style=\"\" width=20px       " +
                    "                       |{{SC2-T}}\r\n!style=\"\" width=20px                         " +
                    "     |{{SC2-Z}}\r\n!style=\"border-right: 1px solid #777;\"            |{{SC2-T}} %\r" +
                    "\n!style=\"\" width=20px                              |Σ\r\n!style=\"\" width=20px     " +
                    "                         |{{SC2-Z}}\r\n!style=\"\" width=20px                       " +
                    "       |{{SC2-P}}\r\n!style=\"border-right: 1px solid #777;\"            |{{SC2-Z}} " +
                    "%\r\n!style=\"\" width=20px                              |Σ\r\n!style=\"\" width=20px   " +
                    "                           |{{SC2-P}}\r\n!style=\"\" width=20px                     " +
                    "         |{{SC2-T}}\r\n!style=\"border-right: 1px solid #777;\"            |{{SC2-P}" +
                    "} %\r\n!style=\"\"                                         |{{SC2-T}} v {{SC2-T}}\r\n!" +
                    "style=\"\"                                         |{{SC2-Z}} v {{SC2-Z}}\r\n!style=" +
                    "\"border-right: 1px solid #777;\"            |{{SC2-P}} v {{SC2-P}}\r\n\r\n|-\r\n");
            
            #line 33 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
 foreach (Bag bag in this.Rows) { 
            
            #line default
            #line hidden
            this.Write("|style=\"border-left:  1px solid #777;\" align=left  | ");
            
            #line 34 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["map"]));
            
            #line default
            #line hidden
            this.Write("\r\n|style=\"border-right: 1px solid #777;\"             | ");
            
            #line 35 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["total"]));
            
            #line default
            #line hidden
            this.Write("\r\n<!-- TvZ -->                                       | ");
            
            #line 36 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["TvZtotal"]));
            
            #line default
            #line hidden
            this.Write("\r\n                                                   | ");
            
            #line 37 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["TvZwin"]));
            
            #line default
            #line hidden
            this.Write("\r\n                                                   | ");
            
            #line 38 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["TvZloss"]));
            
            #line default
            #line hidden
            this.Write("\r\n|style=\"border-right: 1px solid #777;\"             | ");
            
            #line 39 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["TvZpc"]));
            
            #line default
            #line hidden
            this.Write("\r\n<!-- ZvP -->                                       | ");
            
            #line 40 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["ZvPtotal"]));
            
            #line default
            #line hidden
            this.Write("\r\n                                                   | ");
            
            #line 41 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["ZvPwin"]));
            
            #line default
            #line hidden
            this.Write("\r\n                                                   | ");
            
            #line 42 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["ZvPloss"]));
            
            #line default
            #line hidden
            this.Write("\r\n|style=\"border-right: 1px solid #777;\"             | ");
            
            #line 43 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["ZvPpc"]));
            
            #line default
            #line hidden
            this.Write("\r\n<!-- PvT -->                                       | ");
            
            #line 44 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["PvTtotal"]));
            
            #line default
            #line hidden
            this.Write("\r\n                                                   | ");
            
            #line 45 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["PvTwin"]));
            
            #line default
            #line hidden
            this.Write("\r\n                                                   | ");
            
            #line 46 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["PvTloss"]));
            
            #line default
            #line hidden
            this.Write("\r\n|style=\"border-right: 1px solid #777;\"             | ");
            
            #line 47 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["PvTpc"]));
            
            #line default
            #line hidden
            this.Write("\r\n<!-- Mirrors -->                                   | ");
            
            #line 48 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["TvT"]));
            
            #line default
            #line hidden
            this.Write("\r\n                                                   | ");
            
            #line 49 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["ZvZ"]));
            
            #line default
            #line hidden
            this.Write("\r\n|style=\"border-right: 1px solid #777;\"             | ");
            
            #line 50 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bag["PvP"]));
            
            #line default
            #line hidden
            this.Write("\r\n|-\r\n");
            
            #line 52 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
 } 
            
            #line default
            #line hidden
            this.Write("!style=\"border-bottom: 1px solid #777; border-left:  1px solid #777;\" |Overall\r\n!" +
                    "style=\"border-bottom: 1px solid #777; border-right: 1px solid #777;\" |");
            
            #line 54 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["total"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\" <!-- TvZ -->                  |");
            
            #line 55 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["TvZtotal"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\"                               |");
            
            #line 56 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["TvZwin"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\"                               |");
            
            #line 57 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["TvZloss"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777; border-right: 1px solid #777;\" |");
            
            #line 58 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["TvZpc"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\" <!-- ZvP -->                  |");
            
            #line 59 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["ZvPtotal"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\"                               |");
            
            #line 60 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["ZvPwin"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\"                               |");
            
            #line 61 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["ZvPloss"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777; border-right: 1px solid #777;\" |");
            
            #line 62 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["ZvPpc"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\" <!-- PvT -->                  |");
            
            #line 63 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["PvTtotal"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\"                               |");
            
            #line 64 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["PvTwin"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\"                               |");
            
            #line 65 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["PvTloss"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777; border-right: 1px solid #777;\" |");
            
            #line 66 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["PvTpc"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\" <!-- Mirrors -->              |");
            
            #line 67 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["TvT"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777;\"                               |");
            
            #line 68 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["ZvZ"]));
            
            #line default
            #line hidden
            this.Write("\r\n!style=\"border-bottom: 1px solid #777; border-right: 1px solid #777;\" |");
            
            #line 69 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Params["PvP"]));
            
            #line default
            #line hidden
            this.Write("\r\n|}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 71 "G:\git\xpaperclip\lpcarnotools\zero\LpCarno\Templates\MapStatistics.tt"

public Bag Params { get; set; }
public IEnumerable<Bag> Rows { get; set; }

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public class MapStatisticsBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
    }
    #endregion
}
